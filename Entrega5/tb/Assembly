	J INICIO
LABEL1 	1
LABEL2 	74
LABEL3	424910
INICIO	LOAD R1, R0(LABEL1) // R1 = 1
	LOAD R10, R0(LABEL2) // R10 = 74
	LOAD R11, R0(LABEL2) // R11 = 424.910
LOOP1 	ADD R5, R5, R1 // R5 = 74
	BNE R5, R10, LOOP1 // AO FINAL DESTE LOOP, R5 TERÃ? QUE VALER 74
	SUB R4, R11, R10 // R4 = R11 - R10 = 424.910 - 74 = 424.836
	AND R6, R11, R5 // R6 = R11 AND R5 = 424.910 AND 74 = 74
	OR R7, R11, R5 // R7 = R11 OR R5 = 424.910 OR 74 = 424.910
	XOR R8, R11, R5 // R8 = R11 XOR R5 = 424.910 XOR 74 = 424.836
	NOR R9, R11, R5 // R9 = R11 NOR R5 = 424.910 NOR 74 = 4.294.542.385
	ADDI R12, R11, 5 // R12 = R11 + 5 = 424.910 + 5 = 424.915
	ANDI R13, R11, 5 // R13 = R11 AND 5 = 424.910 AND 5 = 4
	ORI R14, R11, 5 // R14 = R11 OR 5 = 424.910 OR 5 = 424.911
	XORI R15, R11, 5 // R15 = R11 XOR 5 = 424.910 XOR 5 = 424.907
	SLLV R16, R11, 5 // R16 = R11 << 5 = 424.910 << 5 = 13.597.120
	SRLV R17, R11, 5 // R17 = R11 >> 5 = 424.910 >> 5 = 13.278
	SRAV R18, R11, 5 // R18 = R11 >>> 5 = 424.910 >>> 5 = 13.278
	STORE R4, R0(68) // MEMÃ“RIA [68] = R4 = 424.836
	STORE R5, R0(70) // MEMÃ“RIA [70] = R5 = 74
	STORE R6, R0(72) // MEMÃ“RIA [72] = R6 = 74
	STORE R7, R0(74) // MEMÃ“RIA [74] = R7 = 424.910
	STORE R8, R0(76) // MEMÃ“RIA [76] = R8 = 424.836
	STORE R9, R0(78) // MEMÃ“RIA [78] = R9 = 4.294.542.385
	STORE R12, R0(80) // MEMÃ“RIA [80] = R12 = 424.915
	STORE R13, R0(82) // MEMÃ“RIA [82] = R13 = 4
	STORE R14, R0(84) // MEMÃ“RIA [84] = R14 = 424.911
	STORE R15, R0(86) // MEMÃ“RIA [86] = R15 = 424.907
	STORE R16, R0(88) // MEMÃ“RIA [88] = R16 = 13.597.120
	STORE R17, R0(90) // MEMÃ“RIA [90] = R17 = 13.278
	STORE R18, R0(92) // MEMÃ“RIA [92] = R18 = 13.278
	
	
	tipo R opcode, op1, op2, destino, shamt, function
	tipo I opcode, base, destino, endereÃ§o imediato
	tipo J opcode, endereÃ§o imediato